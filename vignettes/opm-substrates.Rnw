

\documentclass[nojss]{jss}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% GENERAL HINTS: STYLE OF THIS DOCUMENT
%
% See the according section in the Rnw file for the main tutorial!!!
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% These commands do nothing. They are used for a logical annotation of text,
% causing the spellchecker to ignore its content.
%
\def\Surname{}
\def\German{}

% Acronyms
%
\usepackage{acronym}
\acrodef{ASD}{Autism Spectrum Disorder}
\acrodef{CAS}{Chemical Abstracts Service}
\acrodef{ChEBI}{Chemical Entities of Biological Interest}
\acrodef{CI}{Confidence Interval}
\acrodef{DSMZ}{\German{Deutsche Sammlung von Mikroorganismen und Zellkulturen}}
\acrodef{DSM}{\German{Deutsche Sammlung von Mikroorganismen}}
\acrodef{EC}{Enzyme Commission}
\acrodef{ID}{Identifier}
\acrodef{KEGG}{Kyoto Encyclopedia of Genes and Genomes}
\acrodef{KO}{\acs{KEGG} Orthology}
\acrodef{MeSH}{Medical Subject Headings}
\acrodef{RF}{Random Forest}
\acrodef{PM}{Phenotype Microarray}
\acrodef{PNG}{Portable Network Graphics}
\acrodef{VIM}{Variable Importance Measure}

%% Add Revision Control System (RCS) Markups
\usepackage{ulem}      % use this for sout
\usepackage{hyperref}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{enumitem}
%\usepackage{fancyvrb}
\normalem              % set \emph to \textit again
% Additions (in blue)
\def\rcsadd#1{{\color{blue}#1}}
% Deletions (in red)
\def\rcsdel#1{{\color{red}\sout{#1}}}
% Yellow box (few words)
\def\rcsmark#1{\colorbox{yellow}{#1}}
%Yellow box (paragraph)
\def\rcscom#1{\noindent\newline\vspace*{0.5cm}\colorbox{yellow}{\parbox{\textwidth}{#1}}\vspace*{0.5cm}}


%% overwrite JSS definition of subsubsections
%% e.g., use numbering
\renewcommand{\jsssubsubsec}[2][default]{\vskip \preSskip%
  \pdfbookmark[3]{#1}{Subsubsection.\thesubsubsection.#1}%
  \refstepcounter{subsubsection}%
  {\large \thesubsubsection. #2} \nopagebreak
  \vskip \postSskip \nopagebreak}

%% overwrite JSS definitions of code sections
%% (make font smaller)
\DefineVerbatimEnvironment{Sinput}{Verbatim}{fontshape=sl, fontsize=\small}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{fontsize=\small}
\DefineVerbatimEnvironment{Scode}{Verbatim}{fontshape=sl, fontsize=\small}

\DefineVerbatimEnvironment{Code}{Verbatim}{fontsize=\small}
\DefineVerbatimEnvironment{CodeInput}{Verbatim}{fontshape=sl, fontsize=\small}
\DefineVerbatimEnvironment{CodeOutput}{Verbatim}{fontsize=\small}



%% needed for CRAN checking
%\VignetteIndexEntry{Substrate information in opm}


% authors, first page
\author{Lea A.I. \Surname{Vaas}\\Leibniz Institute \acs{DSMZ} \And
        Markus \Surname{G\"{o}ker}\\Leibniz Institute \acs{DSMZ}}


% title, first page
\title{Working with substrate information in \pkg{opm}}


% authors, header on every 2nd page
\Plainauthor{L.A.I. Vaas, M. G\"{o}ker}


% main title, first page
\Plaintitle{Working with substrate information in opm}


% short title, header on every 2nd page
\Shorttitle{Substrates in \pkg{opm} (\today)}


\Abstract{

This is the substrate-information tutorial of \pkg{opm} in the version of \today{}.
The precomputed information on the known \ac{PM} substrates is explained, as well as the methods available to query this information.
IDs for a variety of databases are stored within \pkg{opm} and can be used to conduct web queries to obtain comprehensive information on the substrates of interest.
We show how these data can be used to visualise results from \ac{PM} experiments, including the outcome from advanced multiple-comparison statistics, within biochemical pathway maps.
Visually comparing genome annotation and \ac{PM} results is easily possible in that manner.
Moreover, methods are described to automatically detect the substrate features that potentially explain a given experimental outcome.
This includes determining the relevant pathways to be used in the visualisations.
More examples for the powerful feature-selection approaches available within \proglang{R} will be explained in future versions of this tutorial.
}

\Keywords{Respiration Kinetics, pathways, \acs{CAS}, \acs{MeSH}, \acs{ChEBI}, MetaCyc, \acs{KEGG}, \pkg{pathview}}

\Plainkeywords{respiration kinetics, pathways, CAS, MeSH, ChEBI, MetaCyc, KEGG, pathview}

\Address{
  Markus \Surname{G\"{o}ker}\\
  Leibniz Institute \acs{DSMZ} -- German Collection of Microorganisms and Cell Cultures\\
  \German{Braunschweig}\\
  \\
  Telephone: +49/531-2616-272\\
  Fax: +49/531-2616-237\\
  E-mail: \email{markus.goeker@dsmz.de}\\
  URL: \url{www.dsmz.de}\\
}


%% this must be included if Sweave is used (with % symbols):
%% need no \usepackage{Sweave.sty}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{document}
% NOTE: Rstudio might insert a line '\SweaveOpts{concordance=TRUE}' after '\begin{document}', which is removed again by the build script, as it causes warning messages during R CMD check.
% So please don't try to rescue that line, and don't rely on it being there.


%% so far adding a TOC proved unsuccessful -- apparently the JSS style doesn't allow for a TOC
%\tableofcontents
%\newpage

\acresetall

\section{Introduction}\label{introduction}

A detailed description of the OmniLog\textregistered \ \ac{PM} system, its measuring procedure and data characteristics are found in the vignette ``\pkg{opm}: An R Package for Analysing OmniLog\textregistered \ Phenotype Microarray Data'' (called ``main tutorial'' in the following).
The description of the methods below presupposes that the user is familiar with the usage of \pkg{opm} and has studied the main tutorial as well as the entries of the \pkg{opm} manual relevant to her or his research.
Especially the concepts behind, and the methods available for, the different classes of \pkg{opm} objects should be known before starting with this tutorial. 

In addition to visual inspection or statistical comparative analyses of \ac{PM} data, as described in the main tutorial, users might be interested in specific information on the substrates used in \ac{PM} assays.
The \pkg{opm} package contains a large variety of additional data on \ac{PM} substrates.
Beside methods for assessing this information directly, this tutorial introduces strategies for visualising the measured \ac{PM} results by mapping them on pathway maps.
Furthermore, analysis methods are described for modelling the effect of substrate features on the \ac{PM} results and thus, e.g., for the identification of those pathways that are particularly suitable for visualising the \ac{PM} results in pathway graphs.


\section{Preparation}\label{preparation}

<<label=chunk-setup, echo=FALSE>>=
options(width = 90)
options(prompt = "R> ")
options(continue = "   ")
options(useFancyQuotes = FALSE)
library("methods")
@

For just downloading information from \ac{KEGG} (see Section~\ref{plate-information}), install the \href{http://bioconductor.org/}{\proglang{Bioconductor}} package \pkg{KEGGREST}.
It needs not be loaded into your \proglang{R} session.
For also drawing \ac{PM} information into \ac{KEGG} pathway maps (see Section~\ref{vis-pathway}), install the \proglang{Bioconductor} package \pkg{pathview} and load it into your session. 
Note that it is important to load \pkg{pathview} before \pkg{opm}, which is needed throughout this tutorial, since otherwise some methods are not visible and the package does not work properly.
In this vignette this is enforced by optionally detaching \pkg{opm} and loading it (again) as follows:

<<label=load-library>>=
suppressPackageStartupMessages(library("pathview"))
if ("package:opm" %in% search())
  detach("package:opm", unload = TRUE)
library("opm")
data(vaas_et_al, package = "opmdata")
@



\section{Accessing plate and substrate information}\label{plate-substrate-information}

The \pkg{opm} package contains a number of functions suitable for accessing precomputed information on entire plates and on the substrates within certain wells.

\subsection{Available plate information}\label{plate-information}

Currently substrate layouts of various plates are available within \pkg{opm}.
An overview of the plate types available in the respective version of \pkg{opm} is obtained by entering

<<label=plate-types, results=hide>>=
plate_type(full = TRUE)
@

The resulting vector of names does not only include OmniLog\textregistered \ plates; see the manual and the main tutorial for further details.
Using other values for \code{full}, or additional arguments, distinct spelling variants of the plate names can be obtained.

\subsection{Available substrate information}\label{subsub-information}

In the manual and help pages these functions are explained within the family ``naming-functions'' with according cross-references.

One usually would start a search by determining the exact spelling of an internally used name with \code{find\_substrate}:

<<label=find-substrate-exact-substring, results=hide>>=
substrates <- find_substrate(c("Glutamine", "Glutamic acid"))
substrates
@

The result is a list (of the \proglang{S3} class ``substrate\_match'') containing character vectors with the results for each query name as values.
Surprisingly, nothing was found for ``Glutamic acid'' but several values for ``Glutamine''.
The default \code{search} argument is ``exact'', which is exact (case-sensitive) matching  of \textit{parts} of the names.
One might want to use ``glob'' searching mode:

<<label=find-substrate-globbing-wrong, results=hide>>=
substrates <- find_substrate(c("L-Glutamine", "L-Glutamic acid"), "glob")
substrates
@

But with so-called wild-cards, i.e. ``*'' for zero to many and ``?'' for a single arbitrary character the search is more flexible:

<<label=find-substrate-globbing-useful, results=hide>>=
substrates <- find_substrate(c("*L-Glutamine", "*L-Glutamic acid"), "glob")
substrates
@

This fetches all terms that end in either query character string, and does so case-insensitively.
Advanced users can apply the much more powerful \code{regex} and \code{approx} search modes; see the manual for details, entry \code{?find\_substrate}.

Note that \pkg{opm} appends a concentration (or just repetition) indicator as a number after a hash sign (``\#'') to the substrate names wherever necessary.
Thus a wild-card ``*'' at the end of a name might often by the most useful search pattern.

Once the internally used names (which are not guaranteed to be stable between distinct \pkg{opm} releases) have been found, information on the substrates can be queried such as their occurrences and positions on plates:

<<label=find-positions, results=hide>>=
positions <- find_positions(substrates)
positions
@

This yields a nested list containing two-column matrices with plate names in the first and well coordinates in the second column.
Using the \code{type} argument, search can be restricted to a plate type of interest, which would yield a named vector.
References to external data resources for each substrate name can be obtained using \code{substrate\_info}:

<<label=substrate-info, results=hide>>=
subst.info <- substrate_info(substrates)
subst.info
@

By default this yields \ac{CAS} numbers (\url{http://www.cas.org/content/chemical-substances/faqs}), but \ac{MeSH} names (useful for conducting PubMed queries; see \url{http://www.ncbi.nlm.nih.gov/mesh/}) \citep{Coletti01072001}, \ac{ChEBI} IDs \citep{Hastings01012013}, \ac{KEGG} compound IDs, \ac{KEGG} drug IDs \citep{Kanehisa01012010} and MetaCyc IDs \citep{Caspi01012012} have also been collected for the majority of the substrates.
Using the ``browse'' argument, full URLs can be created and optionally also directly opened in the default web browser.
Using the ``download'' argument, if \ac{KEGG} drug or compound IDs have been selected, these can be downloaded from the \ac{KEGG} server (if the \pkg{KEGGREST} package is available) and converted into customised objects.
It is possible to nicely display all available information at once:

<<label=substrate-all-info, results=hide>>=
subst.info <- substrate_info(substrates, "all")
subst.info
@

Another use of \code{substrate\_info} is to convert substrate names to lower case but protecting name components such as abbreviations or chemical symbols.
See the manual for further details, help page \code{?substrate\_info}.


\section[Visualisation of PM information within pathway maps]{Visualisation of \ac{PM} information within pathway maps}\label{vis-pathway}

In conjunction with other \proglang{R} packages, it is possible to visualise \ac{PM} results directly in already existing pathway maps as, for example, those from \ac{KEGG}.
These maps are essentially manually drawn biochemical pathway maps representing the currently available knowledge on substrates, enzymes and genes and their connections within pathways. 
Depending on the availability of genome and gene-annotation information within \ac{KEGG}, organism-specific, individual maps can be obtained \citep{Kanehisa01012010}.

The mapping itself works by using information produced by \pkg{opm} for a colour coding of the nodes (here, representing the substrates) within those maps, as can be done similarly with several other types of ``OMICS'' data such as transcriptomics or proteomics data.
For details, see the description on the \ac{KEGG} website (\url{http://www.genome.jp/kegg/}).


\subsection{Providing suitable input data}\label{annotated-input}

%TODO LATER
% need a graphical overview of the workflow
% maybe connected to the existing one in the main tutorial?

The work flow starts with either an \code{OPMX} object containing the aggregated values or the result from an \code{opm\_mcp} analysis.
The first step in both cases is to convert the data into a suitable format, which is a named vector created by the function \code{annotated}.

<<label=annotated>>=
x <- annotated(vaas_1)
head(x)
@

The resulting vector contains the numeric values (selected parameter estimates or \code{opm\_mcp} results, as explained below) as well as an annotation of the according substrates. 
For substrates such as ``Positive Control'' or ``pH 5'' no \ac{KEGG} \ac{ID} is available, which results in \code{NA} values in the vector.
Accordingly, those substrates cannot be marked within pathway maps (see section~\ref{pathview-group}). 
The \code{what} argument, passed as eponymous argument to \code{substrate\_info}, selects the kind of information to be used for the annotation.
With \code{annotated} used with \code{how = "value"} a numeric matrix including the substrate names as row names and first column indicating the mean of chosen computed values is provided.
Further columns indicate the occurrence of a certain substrate in a pathway map or the affiliation to a certain class, e.g. ``Carbohydrates''. 
This information is in analogy to the download argument of \code{substrate\_info} but with conversion to a numeric matrix.
For usage of argument \code{how}, please refer to section~\ref{finding-pathways}.

Although \code{annotated} works directly on \code{OPMX} objects containing aggregated data for single plates or bundles of plates, please note, that the output allows for only one value per substrate. 
Thus, when applying \code{annotated} to a set of plates, make sure that only one experimental group is comprised, since the resulting values are averaged per well over all plates in the input object.
%TODO LATER: once pathview supports time series, this section (and annotated) must be modified accordingly
Using the \code{output} argument, one can select the parameter of interest, for example area under the curve instead of maximum height:

<<label=annotated-param>>=
x <- annotated(vaas_1, output = param_names()[4])
head(x)
@

Visualisation of the results of an \code{opm\_mcp} analysis is also possible, which offers more (statistically interesting) opportunities for making sense of the \ac{PM} data in the context of pathways.
However, this method only makes sense if each coefficient estimated by \code{opm\_mcp} can be linked to a single substrate.
This is usually only possible for the ``Dunnett'' and ``Pairs'' type of contrasts if applied to the wells (see Section~\ref{pathview-group-diffs}).
See the main tutorial and the manual for details on this restriction.

The results from an \code{opm\_mcp} procedure are treated with \code{annotated} as shown before with an \code{OPMX} object, but additional options are available.
In the following example, first an \proglang{opm\_glht} object is generated from the \code{vaas\_4} exemplar object by performing a Dunnett-type multiple comparison of the selected 13 wells against well A05 as control group.
The comparison applies to the default parameter given by \code{opm_opt("curve.param")}; see the manual for details.

<<label=annotated-opm_glht-plot>>=
x <- opm_mcp(vaas_4[, , 1:15], output = "mcp", model = ~ Well,
  linfct = c(Dunnett.A05 = 1), full = FALSE)
@

The resulting 95\% confidence intervals for the difference of means are plotted in Figure~\ref{fig:opm_mcp_CI_plotII}.

\begin{figure}
\centering
\scalebox{0.8}{
<<label=annotated-opm-glht-figure, fig=TRUE, echo=FALSE, width=8, height=6>>=
old.mar <- par(mar = c(3, 8, 3, 2)) # adapt plotting settings
plot(x)
par(old.mar) # reset plotting settings
@
}
\caption{
\label{fig:opm_mcp_CI_plotII}
Point estimates and 95\% confidence intervals in a manually defined comparison of group means for a specifically selected set of wells from the \code{vaas\_4} exemplar object. 
In this procedure each selected well is compared against A05. 
The picture was obtained by running \code{opm\_mcp} and then the plotting function for the resulting \proglang{opm\_glht} object.
See the main tutorial for details.
}
\end{figure}

Using the above generated \proglang{opm\_glht} object, the options modifying the output of \code{annotated} will be illustrated.
Apparently only three comparisons exhibit a statistically significant difference, namely the comparisons A10 - A05, A11 - A05 and A12 - A05, all showing that the reactions in A05 are weaker than those in A10, A11 and A12, respectively.

Using the \code{output} argument, users are able to obtain various statistically relevant categorical results instead of the simple numerical output of the respective point estimator.
The options \code{upwards} and \code{downwards} result in a classification into three categories (\code{FALSE}, \code{NA}, or \code{TRUE}).
These indicate whether or not the cut-off (zero per default) is included in the confidence interval (\code{NA}) and thus a decision possible.
If not, the category indicates the direction of the shift relative to the cut-off.
The options \code{different}, \code{smaller}, \code{larger} and \code{equal} work similarly, but use only the two categories \code{TRUE} and \code{FALSE}. 
Please note that the underlying test seeks for differences and thus the results always have to be interpreted regarding the significance (and magnitude) of these differences; ``insignificantly different'' does not mean ``significantly equal''!

Short-cuts are available for all \code{output}-options, enabling the user to set the cut-off together with the kind of output.
See the manual for details.

A comprehensive overview of the possible results for object \code{x} is shown in the following data frame:

<<label=annotated-opm_glht-options, echo=FALSE>>=
annotab <- c("numeric", "upwards", "downwards", "different", "equal",
  "smaller", "larger")
annotab <- mapply(output = annotab, annotated,
  MoreArgs = list(object = x), SIMPLIFY = FALSE)
annotab <- data.frame(Comparison = rownames(confint(x)$confint), annotab)
annotab
@

All these results are obtained with the setting \code{how = "ids"}; for the usage of \code{how = "value"} see Section ~\ref{finding-pathways}.


\subsection[Visualisation in pathway maps using pathview]{Visualisation in pathway maps using \pkg{pathview}}\label{pathview}

\subsubsection{Visualisation of group means in pathway maps}\label{pathview-group}

Here we will use the function \code{pathview} from the package of the same name \citep{Luo2013}. 
This function can download a user-defined pathway graph from \ac{KEGG}, optionally integrate additional data from other sources, and render the result.
For integrating experimental data from other ``OMICS'' approaches (such as transcriptomics and proteomics), see the corresponding chapter in the \pkg{pathview} vignette for details. 

Here the \code{pathview} function serves for integrating and visualising information produced by \pkg{opm} and provided by \code{annotated}.
The user only has to specify the pathway and provide the \pkg{opm} data.
All other necessary steps (download of pathway graph data as XML file from \ac{KEGG}, parsing of this data file, integrating user-defined data into the pathway representation, and rendering of final output graphics) are automatically conducted by \code{pathview}.
See the \pkg{pathview} vignette for technical details.

In the case of \ac{KEGG}, a pathway map is described as ``a molecular interaction/reaction network diagram represented in terms of the \ac{KO} groups'' (see \url{http://www.genome.jp/kegg/kegg3a.html} for further details).
\ac{KEGG} contains a collection of distinct types of pathway maps identified by a code containing between two and four letters as a prefix, followed by five digits.

The prefixes have the following meanings:

\begin{itemize}[leftmargin=2cm]
\item[map -] Reference pathway
\item[ko -] Reference pathway (\ac{KO})
\item[ec -] Reference pathway (\ac{EC})
\item[rn -] Reference pathway (Reaction)
\item[\textit{org} -] Organism-specific pathway map (\textit{org} is a wild-card for the organism-specific abbreviation composed of two to four letters)
\end{itemize}

Only the first reference pathway map is drawn manually; all other maps are computationally generated. 
The \code{ko} maps contain the manually defined ortholog groups (\code{ko} entries) for all proteins and functional RNA molecules that correspond to \ac{KEGG} pathway nodes, \proglang{BRITE} hierarchy nodes, and \ac{KEGG} module nodes.
The \code{ko} entries are converted to gene \acs{ID} if organism-specific pathways maps are generated.
A list of the existing maps and their corresponding numbers are available on the \ac{KEGG} homepage (see above).

\code{pathview} allows only for using \ac{KEGG} orthology (the \code{ko} maps) or species-specific letter codes.
See \url{http://www.genome.jp/kegg/catalog/org_list.html} for an up-to-date list of organisms with complete genome information in \ac{KEGG}.

A vector as returned by \code{annotated} (see Section~\ref{annotated-input}) serves as input for the visualisation procedure based on \code{pathview}.
For demonstration purposes, we use subsets of \code{vaas_et_al} containing the \textit{Escherichia coli} strains from the first biological repetition. 

<<label=example-data>>=
coli.sub <- subset(vaas_et_al, list(Species = "Escherichia coli", 
  Experiment = "First replicate"))
coli.k12 <- subset(coli.sub, list(Strain = "DSM18039"))
coli.type <- subset(coli.sub, list(Strain = "DSM30083T"))
@

Afterwards we create the annotated vectors containing the average maximum curve heights for the two groups separately:

<<label=example-data-anno>>=
anno.k12 <- annotated(coli.k12)
anno.type <- annotated(coli.type)
@

For a more convenient drawing of \pkg{opm} data on \ac{KEGG} pathway maps, we suggest a wrapper for the \code{pathview} function, providing other default settings for some arguments.
All graphics below are produced using this wrapper, but the user is of course free to use the original \code{pathview} function or write an alternative wrapper.

<<label=pathview-wrapper>>=
opm_path <- function(cpd.data, gene.data = NULL,
    high = list(gene = "green4", cpd = "blue"), 
    mid = list(gene = "lightsteelblue1", cpd = "yellow"),
    low = list(gene = "white", cpd = "yellow"),
    species = "ko", out.suffix = "non-native", 
    key.pos = "topright", afactor = 1000,
    limit = list(gene = 2, cpd = 400), 
    bins = list(gene = 0.5, cpd = 40),
    both.dirs = list(gene = FALSE, cpd = FALSE), 
    sign.pos = "topleft", cpd.lab.offset = 0, 
    same.layer = FALSE, 
    na.col = "white", ...) {
  pathview(cpd.data = cpd.data, gene.data = gene.data,
    high = high, mid = mid, low = low,
    species = species, out.suffix = out.suffix, key.pos = key.pos,
    afactor = afactor, limit = limit, bins = bins,
    both.dirs = both.dirs, sign.pos = sign.pos, 
    cpd.lab.offset = cpd.lab.offset, same.layer = same.layer, 
    na.col = na.col, ...)
}
@

The data for the two strains are shown on the correspondingly separated maps in Figure~\ref{fig:pathview-native-sep-strains}.

<<label=pathview-wrapper-plot-native>>=
coli.map.k12 <- opm_path(cpd.data = anno.k12, species = "ko", 
  out.suffix = "k12.ko", pathway.id = "00052")
coli.map.type <- opm_path(cpd.data = anno.type, species = "ko", 
  out.suffix = "type.ko", pathway.id = "00052")
@

Note particularly the substrates Raffinose, Stachyose and Sucrose (in the middle of the map), which exhibit large respiratory differences, while Sorbitol (on the very left of the map) yields only small respiratory differences between the two strains.

\begin{figure}
 \centering
        \begin{subfigure}[b]{1.0\textwidth}
                \centering
                \fbox{\includegraphics[type=png,ext=.png,read=.png]{ko00052.k12.ko}}
                \caption{Respiratory data (mean maximum height) of \textit{Escherichia coli} strain K12 mapped on the \ac{KEGG} Galactose pathway.}
                \label{fig:1a-pathview-native-sep-strains}
        \end{subfigure}
        \\
        \vspace{20pt}
        \begin{subfigure}[b]{1.0\textwidth}
                \centering
                \fbox{\includegraphics[type=png,ext=.png,read=.png]{ko00052.type.ko}}
                \caption{Respiratory data (mean maximum height) of \textit{Escherichia coli} type strain \ac{DSM} 30083\textsuperscript{T} mapped on the \ac{KEGG} Galactose pathway.}
                \label{fig:1b-pathview-native-sep-strains}
        \end{subfigure}
        \caption{
        \label{fig:pathview-native-sep-strains}
        Galactose metabolism pathway maps for the two \textit{E. coli} strains K12 and \ac{DSM} 30083\textsuperscript{T} showing the mean maximum height on 13 substrates. 
        The aggregated measurement data are represented by according colours and mapped on the corresponding substrates (circles) in the graph. 
   		}
\end{figure}


Using the default settings, \code{pathview} yields a raster image in \ac{PNG} format, which is stored in the current working directory and shown in Figure~\ref{fig:pathview-native-sep-strains}.
For demonstration purposes the pathway number ``00052'', which encodes for the Galactose metabolism pathway map, is chosen.
Genes (boxes) are annotated with \ac{KEGG} ontology numbers (set by choosing \code{species = "ko"}), where available or, alternatively, with EC numbers. 
Note that the \code{species} arguments offers the possibility to use species-specific genome information available in the \ac{KEGG} directory; see above for the letter codes and below for an application example.
The substrates (circles) in the maps get standard compound names, which are automatically retrieved from the ChEMBL database using the compound IDs. 

The data for the two strains can be shown analogously using the categorical output of \code{annotated}, see Figure~\ref{fig:pathview-cat-sep-strains}.
This works because the underlying \proglang{OPMX} object contains discretised data.
Whereas \code{annotated} would by default return a logical vector in that case, the \code{lmap} argument can be used to create a numeric vector on the fly.
See the manual for its usage, entry \code{?annotated}.

<<label=pathview-wrapper-plot-bin>>=
anno.k12.bin <- annotated(coli.k12, output = param_names("disc.name"),
  lmap = 1:3)
anno.type.bin <- annotated(coli.type, output = param_names("disc.name"),
  lmap = 1:3)
coli.map.k12.bin <- opm_path(cpd.data = anno.k12.bin, species = "ko", 
  out.suffix = "k12.ko.bin", pathway.id = "00052",
  limit = list(gene = 2, cpd = c(1, 3)), bins = list(gene = 0.5, cpd = 3))
coli.map.type.bin <- opm_path(cpd.data = anno.type.bin, species = "ko", 
  out.suffix = "type.ko.bin", pathway.id = "00052",
  limit = list(gene = 2, cpd = c(1, 3)), bins = list(gene = 0.5, cpd = 3))
@

\begin{figure}
 \centering
        \begin{subfigure}[b]{1.0\textwidth}
                \centering
                \fbox{\includegraphics[type=png,ext=.png,read=.png]{ko00052.k12.ko.bin}}
                \caption{Respiratory data (mean maximum height, discretised) of \textit{Escherichia coli} strain K12 mapped on the \ac{KEGG} Galactose pathway.}
                \label{fig:pathview-cat-sep-strains-1a}
        \end{subfigure}
        \\
        \vspace{20pt}
        \begin{subfigure}[b]{1.0\textwidth}
                \centering
                \fbox{\includegraphics[type=png,ext=.png,read=.png]{ko00052.type.ko.bin}}
                \caption{Respiratory data (mean maximum height, discretised) of \textit{Escherichia coli} type strain \ac{DSM} 30083\textsuperscript{T} mapped on the \ac{KEGG} Galactose pathway.}
                \label{fig:pathview-cat-sep-strains-1b}
        \end{subfigure}
        \caption{
        \label{fig:pathview-cat-sep-strains}
        Galactose metabolism pathway maps for the two \textit{E. coli} strains K12 and \ac{DSM} 30083\textsuperscript{T} showing the mean maximum height on 13 substrates. 
        The aggregated and discretised measurement data are represented by according colours and mapped on the corresponding substrates (circles) in the graph. 
        }
\end{figure}

By using the \code{species} argument it is possible to include the genome annotations available from \ac{KEGG} (see above for details).
Since in \ac{KEGG} no genome for the \textit{E. coli} type strain is available, we will demonstrate the usage of this argument only for strain K12 (= \ac{DSM} 18039).
One could choose the annotation of strain \textit{E. coli} ``K-12 MG1655'' from the year 1997, which corresponds to \code{species = "eco"} (other K12 variants are available in \ac{KEGG}).
In the corresponding figure, genes (boxes) without annotation information in the chosen genomes remained white without any labelling.
But when using \code{na.col}, entries without annotation information are highlighted with the colour of choice.

 
<<label=pathview_e_coli_comp_map, eval=FALSE>>=
coli.map.k12.eco <- opm_path(cpd.data = anno.k12, species = "eco", 
  out.suffix = "k12.eco", pathway.id = "00052", na.col = "pink")
@


%\begin{figure}
% \centering
%\scalebox{1.225}{
%\includegraphics[type=png,ext=.png,read=.png,page=1]{eco00052.k12.eco}
%}
%\caption{\label{fig:e_coli_kegg_anno}
%Respiratory data (mean maximum height) of \textit{Escherichia coli} strain K12 mapped on the \ac{KEGG} Galactose pathway including information from the \ac{KEGG} annotation of the genome of strain \textit{E. coli} ``K-12 MG1655'' from the year 1997.
%Genes without annotation information remain just white without any labelling.}
%\end{figure}

We do not run this code (and show the resulting figure) here because it involved installing a \proglang{Bioconductor} package that includes the \ac{KEGG} annotation for \code{species = "eco"}.
This package would be selected and downloaded automatically, so this is rather convenient for the user, but we refrain from modifying user libraries within a vignette.

With this type of visualisation users can detect metabolic steps for which no genes are annotated, but \ac{PM} data indicate metabolic activity.
This can help improving genome annotation.
In the chosen example, the failure of the strain to metabolize Galactose is in accordance with the lack of some genes in the genome annotation, causing gaps in the pathway for Galactose catabolism.


\subsubsection{Finding substrates within pathways}\label{finding-substrates}

Note that from the annotation objects \code{anno.k12} or \code{anno.type}, respectively, comprising 96 substrates, only 13 are represented in the shown pathway map in Figure~\ref{fig:pathview-native-sep-strains}.
This is no wonder because the \ac{PM} plates are not arranged according to their affiliation to \ac{KEGG} pathways.
It often makes sense to restrict the considered substrates beforehand if the pathway of interest is already known.
This particularly saves running time in the calls to \code{opm\_mcp} and the \code{annotated} method for \proglang{opm\_glht} objects.

When using the option \code{how = "value"}, \code{annotated} yields a numeric matrix with substrate names as row names and pathway \acs{ID} as column names.
Whereas the main use of such a matrix is described in Section ~\ref{finding-pathways}, it can also be used simply to show the distribution of substrates over pathways.
Ones and zeros indicate whether or not a certain substrate (row) is contained in a certain pathway (column). 
\code{NA}s indicate that a substrate has no \ac{KEGG} \ac{ID}, as for example well A01 which harbours the (pseudo-)substrate ``Negative Control''.

By summing up the columns and sorting the resulting vector, the user gets a ranking of the columns (pathways) indicating how many substrates are covered. 

<<label=anno_sum_mat_col>>=
anno.k12.mat <- annotated(coli.k12, how = "value")
col.sums <- sort(colSums(anno.k12.mat, na.rm = TRUE), decreasing = TRUE)
col.sums[1:10]
@

In the next example we search for the substrates represented in pathway number ``00052'', which is Galactose metabolism.
Then we extract the positions of these substrates (for the plate type of interest) with \code{find\_positions}:

<<label=e-coli-sub-pos>>=
e.subs <- rownames(anno.k12.mat)[!is.na(anno.k12.mat[, "map00052"]) &
  anno.k12.mat[, "map00052"] > 0]
e.subs.pos <- find_positions(e.subs, type = "Gen III")
e.subs.pos
@


\subsubsection{Visualisation of differences of group means in pathway maps}\label{pathview-group-diffs}

Next, we show the maximum-height values from the 13 substrates represented in the Galactose pathway map (number ``00052'') in Figure~\ref{fig:e_coli_single_ci} to demonstrate the sizes of their differences.
Remember that the vector \code{e.subs.pos} contains the positions of the substrates of interest as a character string.
It can thus directly be used to subset \code{OPMX} objects.

<<label=e-coli-single-ci-dummy, eval=FALSE>>=
ci_plot(coli.sub[, , e.subs.pos],
  as.labels = list("Species", "Strain"), subset = "A", x = "bottomright", 
  draw.legend = T, crr = 1.33)
@


\begin{figure}
\centering
\scalebox{1.2}{
<<label=e-coli-single-ci-figure, fig=TRUE, echo=FALSE, height=14, width=20>>=
ci_plot(coli.sub[, , e.subs.pos], 
  as.labels = list("Species", "Strain"), subset = "A", 
  x = "bottomright", 
  draw.legend = FALSE, crr = 1.5)
@
}
\caption{
\label{fig:e_coli_single_ci}
Point estimates and 95\% confidence intervals for the single maximum-height values of the two \textit{E. coli} strains for the subset of substrates represented in the Galactose pathway map.
}
\end{figure}

Straightforwardly, we compute a multiple comparison between only the 13 substrates included in the Galactose metabolism pathway map. 
Our example compares the type strain with K12; each corresponding 95\% \ac{CI} for differences of means for the chosen substrates is shown in Figure~\ref{fig:e_coli_comp_ci}.

<<label=pathview-e_coli-comp>>=
coli.comp <- opm_mcp(coli.sub[, , e.subs.pos], 
  output = "mcp", model = ~ J(Well + Strain), linfct = c(Pairs = 1))
@

%TODO labels on the left of the last figure are truncated

\begin{figure}
\centering
\scalebox{1.1}{
<<label=e-coli-comp-ci-figure, fig=TRUE, echo=FALSE, width=14, height=5.5>>=
old.mar <- par(mar = c(3, 20, 3, 0.5)) # adapt plotting settings
plot(coli.comp, xlim = c(-5, 290))
abline(v = 150, col = "blue", lty = 5, lwd = 2)
par(old.mar) # reset plotting settings
@
}
\caption{
\label{fig:e_coli_comp_ci}
Point estimates and 95\% confidence intervals for the differences of means between the two \textit{E. coli} strains for the subset of substrates represented in the Galactose pathway map.
The blue dashed line indicates a minimal effect size of 150 as used in Figure~\ref{fig:pathview-native-sig-differences-1b}.
The default is 0, as used in Figure~\ref{fig:pathview-native-sig-differences-1a}.
}
\end{figure}

The annotation vector for the differences of means can be obtained by simply applying \code{annotated} to the \proglang{opm\_glht} object. 
The direct mapping of these differences between the two strains on the Galactose pathway is shown in Figure~\ref{fig:pathview-native-differences}.

<<label=pathview_e_coli_comp_map>>=
coli.comp.map <- opm_path(cpd.data = annotated(coli.comp), species = "ko", 
  out.suffix = "coli.comp.ko", pathway.id = "00052")
@


\begin{figure}
 \centering
\scalebox{1.225}{
\includegraphics[type=png,ext=.png,read=.png,page=1]{ko00052.coli.comp.ko}
}
\caption{\label{fig:pathview-native-differences}
Respiration differences between \textit{E. coli} K12 and \ac{DSM} 30083\textsuperscript{T} regarding the maximum-height values mapped on the Galactose pathway.
Compare also Figure~\ref{fig:e_coli_comp_ci}, which directly depicts the magnitude of the differences.
}
\end{figure}

In analogy to the last example, the function \code{annotated} can be used to produce categorical annotation vectors for the differences of means.
Such vectors are very useful because they can specifically highlight the statistically significant differences, and particularly those that are significantly larger than a certain biologically relevant minimum effect size.
Thus the full power of the functions from the \pkg{multcomp} package underlying \code{opm\_mcp} (see the main tutorial and the manual for details) is available when visualising \ac{PM} data in pathway graphs.

The mapping of indicators of the significance of the differences between the two strains regarding the Galactose pathway is shown in Figure~\ref{fig:pathview-native-sig-differences}.
Because we chose the ``upwards'' running mode, up to three colours are used in the map, indicating whether the performance difference is significantly larger than the minimum effect size, insignificantly different from the minimum effect size, or significantly smaller than the minimum effect size.
In Figure ~\ref{fig:pathview-native-sig-differences-1a}, the default minimum effect size of zero is chosen.
Figure ~\ref{fig:pathview-native-sig-differences-1b} shows the results for a user-defined minimum effect size.
This can be set using a short-cut notation indicating both the minimum effect size and the kind of comparison to be conducted.
The manual lists all possible short-cuts.
Remember the use of the \code{lmap} argument. 


<<label=pathview-cat-anno-map>>=
# 'upwards' comparison, default minimum effect size
cat.coli.comp.0 <- opm_path(
  cpd.data = annotated(coli.comp, output = "upwards", lmap = 1:3), 
  species = "ko", out.suffix = "cat-coli-comp-0", pathway.id = "00052",
  limit = list(gene = 2, cpd = c(1, 3)), bins = list(gene = 0.5, cpd = 3))
# 'upwards' comparison, 150 units as minimum effect size
cat.coli.comp.150 <- opm_path(
  cpd.data = annotated(coli.comp, output = "'150", lmap = 1:3), 
  species = "ko", out.suffix = "cat-coli-comp-150", pathway.id = "00052",
  limit = list(gene = 2, cpd = c(1, 3)), bins = list(gene = 0.5, cpd = 3))
@

\begin{figure}
 \centering
        \begin{subfigure}[b]{1.0\textwidth}
                \centering
                \fbox{\includegraphics[type=png,ext=.png,read=.png]{ko00052.cat-coli-comp-0}}
                \caption{Using the default minimum effect size of 0.}
                \label{fig:pathview-native-sig-differences-1a}
        \end{subfigure}
        \\
        \vspace{20pt}
        \begin{subfigure}[b]{1.0\textwidth}
                \centering
                \fbox{\includegraphics[type=png,ext=.png,read=.png]{ko00052.cat-coli-comp-150}}
                \caption{Using a minimum effect size of 150.}
                \label{fig:pathview-native-sig-differences-1b}
        \end{subfigure}
        \caption{
        \label{fig:pathview-native-sig-differences}
        Indicators of the significance of the respiration differences between \textit{E. coli} K12 and \textit{E. coli} \ac{DSM} 30083\textsuperscript{T} regarding the maximum-height values mapped on the Galactose pathway.
Blue, significantly larger than the chosen minimum effect size; grey, insignificantly different from the chosen minimum effect size; yellow, significantly smaller than the chosen minimum effect size.
For the direct mapping of the numeric differences see Figure~\ref{fig:pathview-native-differences}.
Compare also Figure~\ref{fig:e_coli_comp_ci}, which directly depicts the significance of the differences.
        }
\end{figure}



\subsubsection[Visualisation of pathway maps in Graphviz layout]{Visualisation of pathway maps in \proglang{Graphviz} layout}\label{pathview-denovo-layout}

In addition to the native \ac{KEGG} visualisation, \code{pathview} can use the \proglang{Graphviz} library for an alternative visualisation approach.
As return value, the function always generates a list containing two data frames.
The data frame ``plot.data.gene'' contains the data for mapping the genes and, analogously, ``plot.data.cpd'' stores the compound-related data.

In the examples detailed above, a variety of such objects have already been generated, e.g., \code{coli.map.k12} or the \code{coli.map.types} (both described in Section~\ref{pathview-group} and visualised in Figure~\ref{fig:pathview-native-sep-strains} therein).

Next, we show how to produce graphics from these objects instead of directly from \ac{KEGG}.

<<label=pathview-plot-graphviz>>=
coli.graphvizmap.k12 <- opm_path(cpd.data = anno.k12, species = "ko", 
  afactor = 1500, kegg.native = FALSE, out.suffix = "graphvizk12.ko", 
  pathway.id = "00052", sign.pos = "bottomleft", key.pos = "bottomright")
@


\begin{figure}
 \centering
\scalebox{1.225}{
\includegraphics[type=pdf,ext=.pdf,read=.pdf,page=1]{ko00052.graphvizk12.ko}
}
\caption{\label{fig:pathview-non-native}
Respiratory data (mean maximum height) of \textit{Escherichia coli} strain K12 mapped on the \ac{KEGG} Galactose pathway and rendered by \pkg{pathview} using the \proglang{Graphviz} layout engine.
Compare Figure~\ref{fig:1a-pathview-native-sep-strains}, which shows the native \ac{KEGG} rendering of these data.
See the main text for a description of some of the limitations when creating graphics in this way.
}
\end{figure}


Although \code{pathview} offers quite a number of arguments specifically for \code{kegg.native=FALSE}, there are, unfortunately, only limited options for tuning the size of the nodes or the font sizes in this visualisation.
The scaling of text and symbols can be tuned with the usual \code{cex} argument (for \code{kegg.native = FALSE} the default is \code{cex = 0.5}).
The \code{text.width} argument can be used to specify the length for text wrapping. 
In principle, the node size can be fine-tuned with \code{afactor}, however even the help page of the \code{pathview} function emphasises that ``its effect is subtler than expected''.
Together with the automated rendering by the \code{graphviz} layout engine it might be difficult to obtain a visually satisfying map of the pathway of interest.


\section{Finding the pathways of interest}\label{finding-pathways}

In many experimental approaches, the identification of the pathway(s) of interest is one of the main subjects of research.

The information accessible \textit{via} \code{annotated} can serve as input for suitable statistical procedures in order to assess and rank the observed metabolic capabilities (i.e. respiration on the substrates) with respect to their ability to predict a given response. 
Beside the identification of pathways of interest to be used when drawing the \pkg{opm} results in a graph, as detailed in the previous section, such results can further be used as a starting point when searching for a causal explanation of the given \pkg{opm} results.

In the next coding example, we prepare a data matrix with the differences between the two \textit{E. coli} strains (as computed in section ~\ref{pathview-group-diffs}) and add potential explanatory variables from \ac{KEGG}. 
Please refer to the manual and Section~\ref{annotated-input} for an explanation of the usage of \code{annotated} with the argument \code{how = "values"}.
Again, the comparison applies to the default parameter given by \code{opm_opt("curve.param")}; see the manual for details.

<<label=e-coli-comp-full>>=
coli.comp <- opm_mcp(coli.sub, output = "mcp",
  model = ~ J(Well + Strain), linfct = c(Pairs = 1))
coli.anno <- annotated(coli.comp, how = "value")
@

The matrix has to be reduced to the non-\code{NA} rows, i.e. substrates that are not included in \ac{KEGG} have to be removed.
The matrix also needs to be converted to a data frame before the \pkg{randomForest} package \citep{Liaw2002} can be applied.

<<label=e-coli-comp-full>>=
coli.anno <- as.data.frame(coli.anno[complete.cases(coli.anno), ])
suppressPackageStartupMessages(library("randomForest"))
coli.comp.rf <- randomForest(x = coli.anno[, -1], y = coli.anno[, 1],
  importance = TRUE, proximity = TRUE)
@

See \citep{Wouter2012} for a review of \ac{RF} properties that allow for maximising the biological insights that can be extracted from complex OMICS data.
\citep{Boulesteix2012} emphasise the applications of \ac{RF} to computational biology with special attention to practical aspects such as parameter selection and major pitfalls and biases of \ac{RF} and its \ac{VIM}.

%TODO LATER:
%\item \citep{Boccuto2013} - analysis of metabolic profiles of lymphoblastoid cell lines from 137 patients with neurodevelopmental disorders with or without \acs{ASD} and 78 normal individuals, using BIOLOG Phenotype microarrays. Feature selection approaches identified Tryptophan-substrates  - cells from \ac{ASDs} patients are less capable in utilisation of Tryptophan-substrates
%\item  

We can now determine the substrate features that best predict the differences between the two \textit{E. coli} strains and depict these features within a ``Variable Importance Plot'' (Figure~\ref{fig:var-imp-plot}).


<<label=randomforest-figure, fig=FALSE, eval=FALSE>>=
varImpPlot(coli.comp.rf, main = "Difference Type Strain vs. K12")
@

\begin{figure}
 \centering
\scalebox{1.0}{
<<label=random-forest-plot, fig=TRUE, echo=FALSE, width=10, height=5.9>>=
varImpPlot(coli.comp.rf, main = "Difference Type Strain vs. K12")
@
}
\caption{
\label{fig:var-imp-plot}
Variable importance plot for substrate features that potentially explain the performance differences between the two \textit{E. coli} strains.
Apparently the category ``Carbohydrates'' has the highest importance for the model.
That is, one of the strains performs stronger than the other one particularly regarding carbohydrate utilisation.
For a subset of the carbohydrates, those from the Galactose pathway (``map00052''), this can be confirmed in Figure~\ref{fig:e_coli_comp_ci}.
}
\end{figure}

The output can be interpreted a follows:

Whether or not a substrate is a carbohydrate works best for predicting whether one of the strains performs differently than the other.
The category ``Carbohydrates'' works even better than its subcategories such as ``Oligosaccharides''.
The pathway map IDs that are shown to have a strong influence are also related to carbohydrate metabolism, of course.
For instance, the Galactose metabolism (``map00052'') is among the top-scoring substrate features.
For a confirmation using \code{opm\_mcp}, see Figure~\ref{fig:e_coli_comp_ci}.

Note that the approach used here is suboptimal in a certain respect because mean differences between metadata-defined groups have entered the model as dependent variable.
This fits well to the visualisation approaches exemplified above but ignores the variance of the differences and lets the metainformation not directly enter the model because here metadata are only used to define the groups.
The forthcoming version of this vignette will demonstrate feature selection from the curve parameters themselves.
We will show how to easily generate matrices containing estimated both traditional \pkg{opm} metadata and novel \pkg{opm} substrate metainformation as (potential) explanatory variables.
Moreover, we will make use of the \pkg{mboost} package for feature selection.

For now, we will augment the \ac{RF} approach with an \code{opm\_mcp} analysis for confirming whether the reactions on carbohydrate wells are indeed more strongly different between the two strains than those on other wells.
First, the positions of the substrates either belonging to the category ``Carbohydrates'' or not to it are determined and afterwards stored in two vectors. 

<<label=prep.mcp.dat>>=
carb.pos <- rownames(coli.anno)[coli.anno$Carbohydrates == 1]
noncarb.pos <- rownames(coli.anno)[coli.anno$Carbohydrates == 0]
carb.pos <- find_positions(carb.pos, plate_type(coli.sub))
noncarb.pos <- find_positions(noncarb.pos, plate_type(coli.sub))
@

We can now generate the contrast matrix needed for the computation of the multiple comparisons between the two strains 
for precisely these two subsets of substrates.
As recommended in the main tutorial, this should be done by first using \code{opm_mcp} to generate auxiliary contrast matrices, which here provide the dimensions and column names for the final contrast matrix.

<<label=carb-comp-contr-mat>>=
contr.carb <- opm_mcp(coli.sub[, , carb.pos], linfct = c(Dunnett = 1),
  model = ~ J(Well + Strain), output = "contrast")[[1]]
contr.noncarb <- opm_mcp(coli.sub[, , noncarb.pos], linfct = c(Dunnett = 1),
  model = ~ J(Well + Strain), output = "contrast")[[1]]
@  

The final contrast matrix is set up by concatenating the necessary numeric vectors, setting labels for the comparisons and adding the column names.

<<label=carb-comp-contr-finish>>=
contr <- rbind(
  "Carbohydrates/DSM18039 - Carbohydrates/DSM30083T" = c(
    rep(c(2 / ncol(contr.carb), -2 / ncol(contr.carb)),
      times = ncol(contr.carb) / 2), 
    rep(0, times = ncol(contr.noncarb))
  ),
  "non-Carb./DSM18039 - non-Carb./DSM30083T" = c(
    rep(0, times = ncol(contr.carb)),
    rep(c(2 / ncol(contr.noncarb), -2 / ncol(contr.noncarb)), 
      times = ncol(contr.noncarb) / 2)
  )
)
colnames(contr) <- c(colnames(contr.carb), colnames(contr.noncarb))
@

This contrast matrix \code{contr} can now directly be fed into \code{opm\_mcp}.

<<label=carb-comp-test>>=
carb.test <- opm_mcp(coli.sub[, , c(carb.pos, noncarb.pos)], linfct = contr,
  m.type = "lm", model = ~ J(Well + Strain))
@

The results of the two comparisons can be plotted as usual, see Figure~\ref{fig:carb-comp-test}. 
According to the interpretation provided in the figure caption the analysis shows that one of the strains performs stronger than the other one particularly regarding carbohydrate utilisation.

\begin{figure}
 \centering
\scalebox{1.0}{
<<label=carb-comp-test, fig=TRUE, echo=FALSE, width=12, height=3>>=
par(mar = c(3, 25, 4, 3))
plot(carb.test, xlim = c(-190, 20))
@
}
\caption{
\label{fig:carb-comp-test}
Point estimates and 95\% confidence intervals for the comparison of the two \textit{E. coli} strains pooled over substrates classified as ``Carbohydrates'' and ``non-Carbohydrates''.
The difference between the two strains is much larger regarding the carbohydrate substrates than regarding the remaining ones.
}
\end{figure}


%TODO LATER:
% use package party for analysis of the data above
% conduct analysis with randomForest and party using the A-values in dataframe (as it was done with the freese-data)
% this would then be something like \subsection{finding substrates of importance}


%\code{opm_mcp} provides data frame of the selected data when used with argument \code{output = "data"}.
%It contains basically the four columns ``Strain'', ``Parameter'', ``Well'' and ``Value''. 
%
%<<label=e-coli-single-values>>=
%# note: object coli.sub was setup in the beginning of this vignette
%coli.sub.dat <- opm_mcp(coli.sub, ~ Strain, output = "data", in.parens = FALSE)
%coli.sub.anno <- annotated(coli.sub, how = "values")
%coli.sub.dat[, colnames(coli.sub.anno)] <- coli.sub.anno[as.character(coli.sub.dat$Well), ]
%sub.dat.free <- as.data.frame(coli.sub.dat[complete.cases(coli.sub.dat), ])
%head(sub.dat.free)
%@
%
%
%The matrix for \textit{E. coli} strain K12 (object \code{anno.k12.mat}) was already produced in section~\ref{finding-substrates}. 
%Thus, here we provide the matrix for strain \ac{DSM} 30083\textsuperscript{T} and the computed differences between them (as computed in section ~\ref{pathview-group-diffs}). 

%% some code to be used later
%<<label=e-coli-comp-full>>=
%# provide the annotated vector for type DSM 30083T
%anno.type.mat <- annotated(coli.type, how = "value")
%# compute the differences between the two strains
%coli.comp <- opm_mcp(coli.sub, output = "mcp",
%  model = ~ J(Well + Strain), linfct = c(Pairs = 1))
%@

%
%% some code to be used later
%<<>>=
%anno.k12.dat <- as.data.frame(anno.k12.mat[complete.cases(anno.k12.mat), ])
%anno.type.dat <- as.data.frame(anno.type.mat[complete.cases(anno.type.mat), ])
%@
%
%
%% some code to be used later
%<<>>=
%coli.k12.rf <- randomForest(x = anno.k12.dat[, -1], y = anno.k12.dat[, 1],
%  importance = TRUE, proximity = TRUE)
%coli.type.rf <- randomForest(x = anno.type.dat[, -1], y = anno.type.dat[, 1],
%  importance = TRUE, proximity = TRUE)
%@
%
%% some code to be used later
%<<>>=
%varImpPlot(coli.k12.rf, main = "Strain K12")
%varImpPlot(coli.type.rf, main = "Type Strain")
%@

\section[Acknowledgements]{Acknowledgements}
We are grateful to Barry \Surname{Bochner} (BIOLOG Inc.) for providing substrate and plate information on \ac{PM} assays.
The integration of missing OmniLog\textregistered \ substrates into \ac{ChEBI} by the \ac{ChEBI} staff is gratefully acknowledged.
We thank \Surname{Weijun Luo} for providing hints regarding the use of the \pkg{pathview} package.

\clearpage

\bibliography{opm}

\end{document}

