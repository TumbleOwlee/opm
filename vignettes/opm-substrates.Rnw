\documentclass[nojss]{jss}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% GENERAL HINTS: STYLE OF THIS DOCUMENT
%
% See the according section in the Rnw file for the main tutorial 
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% Add Revision Control System (RCS) Markups
\usepackage{ulem}      % use this for sout
\usepackage{hyperref}
%\usepackage{fancyvrb}
\normalem              % set \emph to \textit again
% Additions (in blue)
\def\rcsadd#1{{\color{blue}#1}}
% Deletions (in red)
\def\rcsdel#1{{\color{red}\sout{#1}}}
% Yellow box (few words)
\def\rcsmark#1{\colorbox{yellow}{#1}}
%Yellow box (paragraph)
\def\rcscom#1{\noindent\newline\vspace*{0.5cm}\colorbox{yellow}{\parbox{\textwidth}{#1}}\vspace*{0.5cm}}


%% needed for CRAN checking
%\VignetteIndexEntry{Substrate information in opm}


% authors, first page
\author{Lea A.I. Vaas\\Leibniz Institute DSMZ \And
        Johannes Sikorski\\Leibniz Institute DSMZ  \And
        Markus G\"{o}ker\\Leibniz Institute DSMZ}


% title, first page
\title{Working with substrate information in \pkg{opm}}


% authors, header on every 2nd page
\Plainauthor{L.A.I. Vaas, J. Sikorski, M. G\"{o}ker}


% main title, first page
\Plaintitle{Working with substrate information in opm}


% short title, header on every 2nd page
\Shorttitle{Substrates in \pkg{opm} (\today)}


\Abstract{
The OmniLog\textregistered \ Phenotype Microarray system is able to monitor simultaneously, on a longitudinal time scale, the phenotypic reaction of single-celled organisms such as bacteria, fungi, and animal cell cultures to up to 2,000 environmental challenges spotted on sets of 96-well microtiter plates.
The phenotypic reactions are recorded as respiration kinetics with a shape comparable to growth curves.
Tools for storing the curve kinetics, aggregating the curve parameters, recording associated metadata of organisms and experimental settings as well as methods for analysing graphically and statistically these highly complex data sets are increasingly in demand.

The \pkg{opm} \proglang{R} package facilitates management, visualization and statistical analysis of Phenotype Microarray data.
Raw measurements can be easily input into \proglang{R}, combined with relevant meta-information and accordingly analysed.
The kinetics can be aggregated by estimating curve parameters using several methods.
Containers of \pkg{opm} data can easily be queried for and subset by using the integrated metadata and other information.
Using \href{http://www.genome.jp/kegg/}{KEGG}, a database resource for understanding high-level functions and utilities of the biological system, \pkg{opm} offers functionality to map and render PM data on relevant pathway graphs in customized manner.
All methods are exemplified using real-world data sets that are part of the \pkg{opm} \proglang{R} package or are included in the accompanying data package \pkg{opmdata}.

This is the tutorial of \pkg{opm-substrates} in the version of \today{}.

}

\Keywords{Cell Lines, Metadata, Microbiology, Respiration Kinetics, Pathway, \proglang{KEGG}, \pkg{pathview}}

\Plainkeywords{cell Lines, metadata, microbiology, respiration kinetics, pathway, KEGG, pathview}

\Address{
  Markus G\"{o}ker\\
  Leibniz Institute DSMZ -- German Collection of Microorganisms and Cell Cultures\\
  Braunschweig\\
  \\
  Telephone: +49/531-2616-272\\
  Fax: +49/531-2616-237\\
  E-mail: \email{markus.goeker@dsmz.de}\\
  URL: \url{www.dsmz.de}\\
}


%% this must be included if Sweave is used (with % symbols):
%% need no \usepackage{Sweave.sty}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{document}
% NOTE: Rstudio might insert a line '\SweaveOpts{concordance=TRUE}' after '\begin{document}', which is removed again by the build script, as it causes warning messages during R CMD check.
% So please don't try to rescue that line, and don't rely on it being there.


%% so far adding a TOC proved unsuccessful -- apparently the JSS style doesn't allow for a TOC
%\tableofcontents
%\newpage


\section[Introduction]{Introduction}\label{introduction}

\subsection[Scientific Introduction]{Scientific Introduction}\label{Sintroduction}
A detailed description of the Penotype MicroArray (PM) system, its measuring procedure and data characteristics can be found in the vignette ``\pkg{opm}: An R Package for Analysing OmniLog\textregistered \ Phenotype MicroArray Data''. 

Beside visual inspection of data or statistical comparative analyses of Phenotype Microarray data, users might be interested in mapping the data on pathway maps for biological interpretation of higher-level systemic functions.

This vignette focusses on this mapping and integrative data analysis methods.
% welche funktionalitaeten ueberhaupt da sind -> grafik fuer workflow?


\section[Methods]{Methods}\label{methods}

In order to apply the functionality for integrative data analysis the user has to provide an OPMA or OPMS object containing the aggregated data or results from \proglang{opm\_mcp}. The corresponding workflow is descriped in detail in the vignette ``\pkg{opm}: An R Package for Analysing OmniLog\textregistered \ Phenotype MicroArray Data''. 

However, in section~\ref{dataPrep} a brief protocol for generation of an OPMS object from example data is given.


\subsection[Availabel plate information]{Available plate information}\label{plateInfo}

Currently substrate-layouts of 44 different plates are available within \pkg{opm} and listed in Table~\ref{tab:platesTable}. 

\begin{table}
\centering
	\begin{tabular}{| l | l |}
\hline
\textbf{Plate}													& \textbf{Group}\\
\hline
\hline
PM01 (Carbon Sources) 									& C utilization\\
PM02 (Carbon Sources) 									& C utilization\\
\hline
PM04 (Phosphorus and Sulfur Sources) 					& P/S utilization\\
\hline
PM05 (Nutrient Supplements) 								& C / N utilization\\
\hline
PM03 (Nitrogen Sources) 									& N utilization\\
PM06 (Peptide Nitrogen Sources) 							& N utilization\\
PM07 (Peptide Nitrogen Sources) 							& N utilization\\
PM08 (Peptide Nitrogen Sources) 							& N utilization\\
\hline
PM09 (Osmolytes) 										& Osmotic sensitivity\\
\hline
PM10 (pH) 												& pH sensitivity\\
\hline
PM11 (Chemicals) 										& Chemical sensitivity\\
PM12 (Chemicals) 										& Chemical sensitivity\\
PM13 (Chemicals) 										& Chemical sensitivity\\
PM14 (Chemicals) 										& Chemical sensitivity\\
PM15 (Chemicals) 										& Chemical sensitivity\\
PM16 (Chemicals) 										& Chemical sensitivity\\
PM17 (Chemicals) 										& Chemical sensitivity\\
PM18 (Chemicals) 										& Chemical sensitivity\\
PM19 (Chemicals)	 										& Chemical sensitivity\\
PM20 (Chemicals) 										& Chemical sensitivity\\
PM21 (Chemical Sensitivity) 								& Chemical sensitivity\\
PM22 (Chemical Sensitivity) 								& Chemical sensitivity\\
PM23 (Chemical Sensitivity) 								& Chemical sensitivity\\
PM24 (Chemical Sensitivity) 								& Chemical sensitivity\\
PM25 (Chemical Sensitivity) 								& Chemical sensitivity\\
\hline
Gen III (Identification)									& Identification\\
ECO (Microbial Community Analysis) 						& Identification\\
\hline
PM-M TOX01 (Chemical Sensitivity)						& C utilization mammals\\
\hline
PM-M01 (Carbon and Energy Sources) 						& C / N utilization mammals\\
PM-M02 (Carbon and Energy Sources / Nitrogen Sources) 	& C / N utilization mammals\\
PM-M03 (Carbon and Energy Sources / Nitrogen Sources) 	& C / N utilization mammals\\
PM-M04 (Carbon and Energy Sources / Nitrogen Sources) 	& C / N utilization mammals\\
\hline
PM-M05 (Ions) 											& Chemical sensitivity mammals\\
PM-M06 (Hormones \& Metabolic Effectors) 				& Chemical sensitivity mammals\\
PM-M07 (Hormones \& Metabolic Effectors) 				& Chemical sensitivity mammals\\
PM-M08 (Hormones \& Metabolic Effectors) 				& Chemical sensitivity mammals\\
PM-M11 (Anti-Cancer Agents) 								& Chemical sensitivity mammals\\
PM-M12 (Anti-Cancer Agents) 								& Chemical sensitivity mammals\\
PM-M13 (Anti-Cancer Agents) 								& Chemical sensitivity mammals\\
PM-M14 (Anti-Cancer Agents) 								& Chemical sensitivity mammals\\
\hline
FF (Fungi Identification) 								& Identification fungi\\
SF-P2 (Sporulating and Filamentous P2) 					& Identification fungi\\
SF-N2 (Sporulating and Filamentous N2) 					& Identification fungi\\
\hline
	\end{tabular}  
	\caption{Currently available plate-layouts and substrate information in \pkg{opm}}
	\label{tab:platesTable}
\end{table}

explain available plates/substrate-layout, also ID plates can be run in PM-mode \citep{vaas} accessing substrate information is explained in Section~\ref{application substrates}
%% later the substrate grouping can be added


\subsection[Integrative data analysis]{Integrative data analysis}\label{IntData}

explain pathway based data integration and visualization; map and render user data on relevant pathway graphs

\href{http://www.genome.jp/kegg/}{KEGG} is a database resource for understanding high-level functions and utilities of the biological system, such as the cell, the organism and the ecosystem, from molecular-level information, especially large-scale molecular datasets generated by genome sequencing and other high-throughput experimental technologies.
Pathway Mapping
KEGG PATHWAY mapping is the process to map molecular datasets, especially large-scale datasets in genomics, transcriptomics, proteomics, and metabolomics, to the KEGG pathway maps for biological interpretaion of higher-level systemic functions. 
% erklaeren, wozu man die daten nutzen kann, wenn man grafik und gruppenvergleiche gemacht hat

package \pkg{pathview} \citep{Luo2013}:
All users need is to supply their gene or compound data and specify the target pathway. 
Pathview automatically downloads the pathway graph data, parses the data file, maps user data to the pathway, and renders pathway graph with the mapped data. 
Although built as a stand-alone program, pathview may seamlessly integrate with pathway (and functional) analysis tools for a large-scale and fully automated analysis pipeline. 


\section[Program application]{Program application}\label{program application}

\subsection[Data preparation]{Data preparation}\label{dataPrep}

\pkg{opm}: An R Package for Analysing OmniLog\textregistered \ Phenotype MicroArray Data
%\subsection[]{}\label{}
<<label=chunk-setup, echo=FALSE>>=
options(width=90)
options(prompt = "R> ")
options(continue = "   ")
options(useFancyQuotes = FALSE)
library("methods")
@

% preparation to make the annotated vector of PM-data available
Before starting, the \pkg{opm} package should be loaded into an \proglang{R} session as follows:

<<label=load-library>>=
library(opm)
@

The example dataset distributed with the package \citep{vaas} comprises the results from running 114 GEN-III plates (BIOLOG Inc.) in the PM mode of the OmniLog\textregistered \ reader.
The organisms used were two strains of \textit{Escherichia coli} (DSM 18039 $=$ K1 and the type strain DSM 30083\textsuperscript{T}) and two strains of \textit{Pseudomonas aeruginosa} (DSM 1707 and 429SC \citep{Selezska2012}).
The strains with a DSM number could be ordered from the Leibniz Institute DSMZ -- German Collection of Microorganisms and Cell Cultures (\url{http://www.dsmz.de/}).

Each strain was measured in two biological replicates, each comprising ten technical replicates, yielding a total of 80 plates.
To additionally investigate the impact of the growth age of cultures on the technical and biological reproducibility of the PM respiration kinetics, strain \textit{E. coli} DSM 18039 was grown on solid LB medium for nine different durations, from 16.75 h (t1) to 40.33 h (t9), respectively.
For each growth duration four technical replicates were performed except for t9 (which was repeated only twice), yielding 34 plates for this time-series experiment.
All biological and experimental details of this dataset have been described previously \citep{vaas}.

Two subsets of the data, \code{vaas\_1} and \code{vaas\_4}, are included in \pkg{opm}.
Use \code{?vaas\_1} and \code{?vaas\_4} to view their help pages, and have a look at the objects as follows:

<<label=example-data, results=hide>>=
vaas_1
vaas_4
@

The entire dataset, stored in the object \code{vaas\_et\_al}, comes with the supporting package \pkg{opmdata} and can (if that package is installed, of course) be loaded using:

<<label=big-example-data, results=hide>>=
data(vaas_et_al, package = "opmdata")
@

To view its help page, use \code{?opmdata::vaas\_et\_al}.

The metadata included in these objects comprise seven entries.
The entry \textit{Experiment} denotes the biological replicate or the affiliation to the time-series experiments.
The keys \textit{Species} and \textit{Strain} refer to the organism used for the respective experiment (see above), and \textit{Slot} (either \textit{A} or \textit{B}) indicates whether the plate was placed in the left or the right half of the OmniLog\textregistered \ reader.
(Note that for an assessment of the reproducibility of the curves the slot is occasionally of relevance.)
Two additional entries contain the index of the time point and the corresponding sample point in minutes for the time series experiment.
The key \textit{Plate number} indicates the technical replicate (per biological replicate).
The combination of the keys \textit{Strains}, \textit{Species}, \textit{Experiment} and \textit{Plate number} results in a unique label which unequivocally annotates every single plate.

data aggregation:

\code{vaas\_1} already contains aggregated data but we will re-calculate some for demonstration purposes.
For invoking the fast estimation method, use:

<<label=aggregation, results=hide>>=
vaas_1.reaggr <- do_aggr(vaas_1, boot = 100, method = "opm-fast")
@

This will only estimate two of the four parameters, namely A and AUC.
(Screen messages output by \code{boot.ci()} might be annoying but can usually be ignored.)
Information about the data aggregation settings is available \textit{via} \code{aggr\_settings()}:

<<label=aggregation-settings, results=hide>>=
aggr_settings(vaas_1)
aggr_settings(vaas_1.reaggr)
@

and the aggregated data can be extracted as a matrix \textit{via} \code{aggregated()}, e.g.:

<<label=aggregated-data, results=hide>>=
summary(aggregated(vaas_1))
summary(aggregated(vaas_1.reaggr))
@

here: prepare an OPMS-object containing also results from multiple comparisons using \proglang{opm\_mcp}.

\subsection[Accessing substrate information]{Accessing substrate information}\label{application substrates}

The \pkg{opm} package contains a number of functions suitable for accessing precomputed information on the substrates of wells and plates.
In the manual and help pages these functions are contained in the family ``naming-functions'' with according cross-references.
One usually would start a search by determining the exact spelling of an internally used name with \code{find\_substrate()}:

<<label=find-substrate-exact-substring, results=hide>>=
substrates <- find_substrate(c("Glutamine", "Glutamic acid"))
substrates
@

The results is a list (of the \proglang{S3} class ``substrate\_match'') containing character vectors with the results for each query name as values.
Surprisingly, nothing was found for ``Glutamic acid'' but several values for ``Glutamine''.
The default \code{search} argument is ``exact'', which is exact (case-sensitive) matching  of \textit{substrings} of the names.
One might want to use ``glob'' searching mode:

<<label=find-substrate-globbing-wrong, results=hide>>=
substrates <- find_substrate(c("L-Glutamine", "L-Glutamic acid"), "glob")
substrates
@

But with so-called wildcards, i.e. ``*'' for zero to many and ``?'' for a single arbitrary character the search is more flexible:

<<label=find-substrate-globbing-useful, results=hide>>=
substrates <- find_substrate(c("*L-Glutamine", "*L-Glutamic acid"), "glob")
substrates
@

This fetches all terms that end in either query character string, and does so case-insensitively.
Advanced users can apply the much more powerful ``regex'' and ``approx'' search modes; see the manual for details, entry \code{?find\_substrate}.

Once the internally used names (which are not guaranteed to be stable between distinct \pkg{opm} releases) have been found, information on the substrates can be queried such as their occurrences and positions on plates:

<<label=find-positions, results=hide>>=
positions <- find_positions(substrates)
positions
@

This yields a nested list containing two-column matrices with plate names in the first and well coordinates in the second column.
References to external data resources for each substrate name can be obtained using \code{substrate\_info()}:

<<label=substrate-info, results=hide>>=
subst.info <- substrate_info(substrates)
subst.info
@

By default this yields CAS numbers (\url{http://www.cas.org/content/chemical-substances/faqs}), but MeSH names (useful for conducting PubMed queries; see \url{http://www.ncbi.nlm.nih.gov/mesh/}) \citep{Coletti01072001}, ChEBI IDs \citep{Hastings01012013}, KEGG compound IDs, KEGG drug IDs \citep{Kanehisa01012010} and MetaCyc IDs \citep{Caspi01012012} IDs have also been collected for the majority of the substrates.
Using the ``browse'' argument, full URLs can be created and optionally also directly opened in the default web browser.
Using the ``download'' argument, if KEGG drug or compound IDs have been selected, these can be downloaded from the KEGG server if the \pkg{KEGGREST} is available and converted into customized objects.
It is possible to nicely display all available information at once:

<<label=substrate-all-info, results=hide>>=
subst.info <- substrate_info(substrates, "all")
subst.info
@

Another use of \code{substrate\_info()} is to convert substrate names to lower case but protecting name components such as abbreviations or chemical symbols.
See the manual for further details, help page \code{?substrate\_info}.


install pathview

first dependencies

<<label=pathview-install, echo=FALSE, results=hide>>=
#source("http://bioconductor.org/biocLite.R")
#biocLite(c("Rgraphviz", "png", "KEGGgraph", "org.Hs.eg.db"))

#source("http://bioconductor.org/biocLite.R")
#biocLite("pathview")
@


<<label=pathview-map>>=
library(pathview)
# here provide the annotated vector from vaas_1
xx <- annotated(vaas_1)

# here map the PM data stored in xx onto the pathway-map for galactose-metabolism

vaas_1_KEGG_native <- pathview(gene.data = NULL,
                           cpd.data = xx , na.col="grey",
                           low = list(gene = "white", cpd = "white"),
                           mid = list(gene = "lightsteelblue1", cpd = "lightsteelblue1"),
                           high = list(gene = "green4", cpd = "magenta4"),
                           pathway.id = "00052", species = "ko", out.suffix = "KEGG-native",
                           keys.align = "x", kegg.native = T,
                           key.pos = "topright",
                           map.cpdname = TRUE,
                           is.signal =TRUE,
                           limit = list(gene=2, cpd=400),
                           bins = list(gene=0.5, cpd=20),
                           discrete = list(gene=FALSE, cpd=FALSE),
                           both.dirs = list(gene = FALSE, cpd = FALSE),
                           cex = 0.25, sign.pos = "bottomleft", cpd.lab.offset = 0,
                           same.layer = F,
                           rank.dir="TB") 
file.rename("ko00052.KEGG-native.png", "ko00052_KEGG-native.png")
@


\begin{figure}
\scalebox{1.225}{
\includegraphics{ko00052_KEGG-native}
}
\caption{\label{fig:pathview}
Map of galactose metabolisms in the native KEGG representation available in ko00052.png.  
}
\end{figure}


<<label=pathview-map>>=
vaas_1 <- pathview(gene.data = NULL,
  cpd.data = xx , na.col ="grey",
  low = list(gene = "white", cpd = "white"),
  mid = list(gene = "lightsteelblue1", cpd = "lightsteelblue1"),
  high = list(gene = "green4", cpd = "magenta4"),
  pathway.id = "00052", species = "ko", out.suffix = "non-native",
  keys.align = "x", kegg.native = F,
  key.pos = "bottomright", map.cpdname = TRUE,
  is.signal = TRUE, afactor = 1000,
  limit = list(gene = 2, cpd = 400),
  bins = list(gene = 0.5, cpd = 20),
  discrete = list(gene=FALSE, cpd=FALSE),
  both.dirs = list(gene = FALSE, cpd = FALSE),
  cex = 0.7, sign.pos = "bottomleft", cpd.lab.offset = 0,
  same.layer = F,
  pdf.size = c(10,7),
  rank.dir = "TB") 
file.rename("ko00052.non-native.pdf", "ko00052_non-native.pdf")
@
\begin{figure}
\scalebox{1.225}{
\includegraphics{ko00052_non-native}
}
\caption{\label{fig:pathview}
Map of galactose metabolisms in the non-native KEGG representation.  
}
\end{figure}
\section[Discussion]{Discussion}\label{Discussion}

An enhancement of the \pkg{opm} package would be to include much more precomputed information about the substrates, thus greatly facilitating data arrangement and hypothesis testing.
At the moment only the translation of well coordinates to substrate names is provided, as well as access to MeSH names and CAS, ChEBI, KEGG and Metacyc IDs (and the according web pages) for the majority of the substrates.
More substrate information could be integrated into the package, particularly for arranging the substrate into groups, thus easing testing of phenotypic hypotheses.

\section[Acknowledgements]{Acknowledgements}
The integration of missing OmniLog\textregistered \ substrates into ChEBI by the ChEBI staff is gratefully acknowledged.


\bibliography{opm}

\end{document}

